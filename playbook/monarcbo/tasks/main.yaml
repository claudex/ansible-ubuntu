---

- name: checkout repository
  git:
    repo: https://github.com/monarc-project/MonarcAppBO
    dest: /var/lib/monarc/bo/MonarcAppBO/
    version: master
  register: appbo_pull

- name: create module dir
  file:
    path: /var/lib/monarc/bo/MonarcAppBO/module
    state: directory

- name: create data dir
  file:
    path: /var/lib/monarc/bo/MonarcAppBO/data
    state: directory
    owner: "www-data"
  become: True

- name: install composer
  copy:
    src: "composer.phar"
    dest: "/usr/local/bin/composer"
    mode: 0755
  become: True

- name: update composer
  shell: composer self-update
  become: True

- name: composer install
  shell: composer install
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: appbo_pull.before == None

- name: MonarcCore link
  file:
    src: /var/lib/monarc/bo/MonarcAppBO/vendor/monarc/core
    dest: /var/lib/monarc/bo/MonarcAppBO/module/MonarcCore
    state: link

- name: backoffice link
  file:
    src: /var/lib/monarc/bo/MonarcAppBO/vendor/monarc/backoffice
    dest: /var/lib/monarc/bo/MonarcAppBO/module/MonarcBO
    state: link

- name: create monarc bo database
  mysql_db:
    name: monarc_master
    config_file: /etc/mysql/debian.cnf
  become: True

- name: create monarc common database1
  mysql_db:
    name: monarc_common
    config_file: /etc/mysql/debian.cnf
  become: True

- name: create monarc bo sql user
  mysql_user:
    name: monarc
    password: "{{ monarc_sql_password }}"
    priv: "monarc_common.*:ALL/monarc_master.*:ALL"
    config_file: /etc/mysql/debian.cnf
  become: True

# - name: initializes the database
#   command: gunzip -k db-bootstrap/monarc-common.sql.gz
#   args:
#     chdir: /var/lib/monarc/bo/MonarcAppBO/

# - name: initializes the database
#   command: mysql -u monarc -p"{{ monarc_sql_password }}" monarc_common < db-bootstrap/monarc-common.sql
#   args:
#     chdir: /var/lib/monarc/bo/MonarcAppBO/

- name: configuration template
  template:
    src: local.php.j2
    dest: /var/lib/monarc/bo/MonarcAppBO/config/autoload/local.php
    mode: 0400
    owner: www-data
  become: True

- name: update-all
  shell: "scripts/update-all.sh"
  args:
    chdir: /var/lib/monarc/bo/MonarcAppBO/
  when: appbo_pull.before != appbo_pull.after
  become_user: www-data

- name: required packages
  apt:
    name: python-mysqldb
  become: True

- name: create readonly access to monarc common
  mysql_user:
    name: "{{ item.value.name }}"
    host: "%"
    password: "{{ item.value.mysql_password }}"
    priv: "monarc_common.*:SELECT"
    config_file: /etc/mysql/debian.cnf
  with_dict: "{{ dict(groups['dev'] | map('extract',hostvars,'clients') | map('dictsort') | sum(start=[]) | list) }}"
  when: item is defined
  become: True

- name: create spool directory
  file: name=/var/spool/monarc owner=www-data state=directory
  become: True

- name: create temp directory for parsing new clients
  file: name=/var/tmp/monarc/created recurse=True state=directory owner=www-data
  become: True

- name: create temp directory for parsing deleted clients
  file: name=/var/tmp/monarc/deleted recurse=True state=directory owner=www-data
  become: True

- name: install cat script for new clients
  copy: src=new_monarc_clients.sh dest=/usr/local/bin/new_monarc_clients.sh mode=0755
  become: True

- name: install cat script for deleted clients
  copy: src=del_monarc_clients.sh dest=/usr/local/bin/del_monarc_clients.sh mode=0755
  become: True

- name: rewrite apache module
  apache2_module:
    state: present
    name: rewrite
  become: True
  notify:
    - restart apache

- name: apache vhost configuration
  template: src=apache_vhost_conf.j2 dest=/etc/apache2/sites-available/{{ ansible_fqdn }}.conf
  become: True
  notify:
    - reload apache

- name: deactivates the default virtualhost
  command: a2dissite 000-default.conf
  become: True
  notify:
    - reload apache

- name: activates the virtualhost
  command: a2ensite {{ ansible_fqdn }}
  become: True
  notify:
    - reload apache
